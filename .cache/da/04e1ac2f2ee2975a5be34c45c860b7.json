{"id":"node_modules/fuctbase64/index.js","dependencies":[{"name":"C:\\Users\\rasam\\Documents\\BeCode\\character-manager1\\package.json","includedInParent":true,"mtime":1593442574871},{"name":"C:\\Users\\rasam\\Documents\\BeCode\\character-manager1\\node_modules\\fuctbase64\\package.json","includedInParent":true,"mtime":1593442573585}],"generated":{"js":"module.exports = function (event) {\r\n  return new Promise((resolve, reject) => {\r\n    let reader = new FileReader();\r\n    let files = event.target.files;\r\n    let len = files.length;\r\n    if (len > 1) {\r\n      reject(new DOMException(\"Only one file can be uploaded at a time\"));\r\n    } else {\r\n      reader.onerror = () => {\r\n        reader.abort();\r\n        reject(new DOMException(\"Problem parsing input file.\"));\r\n      };\r\n      let file = files[0]\r\n      reader.onload = (evt) => {\r\n        const uint = new Uint8Array(evt.target.result);\r\n        let bytes = [];\r\n        uint.map(byte => {\r\n          bytes.push(byte.toString(16));\r\n        });\r\n        const hex = bytes.join('').toUpperCase();\r\n        let base64 = reader.result.split(',')[1];\r\n        file.base64 = base64;\r\n        file.binaryFileType = getMimetype(hex);\r\n        resolve(file);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nconst getMimetype = (signature) => {\r\n  switch (signature) {\r\n      case '89504E47':\r\n          return 'image/png'\r\n      case '47494638':\r\n          return 'image/gif'\r\n      case '25504446':\r\n          return 'application/pdf'\r\n      case 'FFD8FFDB':\r\n      case 'FFD8FFE0':\r\n          return 'image/jpeg'\r\n      case '504B0304':\r\n          return 'application/zip'\r\n      default:\r\n          return 'Unknown filetype'\r\n  }\r\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fuctbase64/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fuctbase64/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/fuctbase64/index.js":"module.exports = function (event) {\r\n  return new Promise((resolve, reject) => {\r\n    let reader = new FileReader();\r\n    let files = event.target.files;\r\n    let len = files.length;\r\n    if (len > 1) {\r\n      reject(new DOMException(\"Only one file can be uploaded at a time\"));\r\n    } else {\r\n      reader.onerror = () => {\r\n        reader.abort();\r\n        reject(new DOMException(\"Problem parsing input file.\"));\r\n      };\r\n      let file = files[0]\r\n      reader.onload = (evt) => {\r\n        const uint = new Uint8Array(evt.target.result);\r\n        let bytes = [];\r\n        uint.map(byte => {\r\n          bytes.push(byte.toString(16));\r\n        });\r\n        const hex = bytes.join('').toUpperCase();\r\n        let base64 = reader.result.split(',')[1];\r\n        file.base64 = base64;\r\n        file.binaryFileType = getMimetype(hex);\r\n        resolve(file);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nconst getMimetype = (signature) => {\r\n  switch (signature) {\r\n      case '89504E47':\r\n          return 'image/png'\r\n      case '47494638':\r\n          return 'image/gif'\r\n      case '25504446':\r\n          return 'application/pdf'\r\n      case 'FFD8FFDB':\r\n      case 'FFD8FFE0':\r\n          return 'image/jpeg'\r\n      case '504B0304':\r\n          return 'application/zip'\r\n      default:\r\n          return 'Unknown filetype'\r\n  }\r\n}"},"lineCount":48}},"error":null,"hash":"c213551cede336c618047beff317d6c1","cacheData":{"env":{}}}